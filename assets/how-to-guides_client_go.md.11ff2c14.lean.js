import{_ as n,o as a,c as l,O as o}from"./chunks/framework.6b456e69.js";const u=JSON.parse('{"title":"Celestia Go transaction client tutorial","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Celestia Go transaction client tutorial | Celestia Docs"}],["meta",{"property":"og:description","content":"The first modular blockchain network."}]]},"headers":[],"relativePath":"how-to-guides/client/go.md","filePath":"how-to-guides/client/go.md","lastUpdated":1761840221000}'),p={name:"how-to-guides/client/go.md"};function e(t,s,c,r,E,y){return a(),l("div",null,s[0]||(s[0]=[o(`<h1 id="celestia-go-transaction-client-tutorial" tabindex="-1">Celestia Go transaction client tutorial <a class="header-anchor" href="#celestia-go-transaction-client-tutorial" aria-label="Permalink to &quot;Celestia Go transaction client tutorial&quot;">​</a></h1><p>The Celestia Go client lets you submit and retrieve data from the Celestia network without running your own node. This tutorial shows you how to get started with the basics.</p><h2 id="what-you-can-do" tabindex="-1">What you can do <a class="header-anchor" href="#what-you-can-do" aria-label="Permalink to &quot;What you can do&quot;">​</a></h2><ul><li><strong>Submit blobs</strong>: Store data on Celestia&#39;s data availability layer</li><li><strong>Retrieve blobs</strong>: Get data back from the network</li><li><strong>Check balance</strong>: See your account&#39;s token balance</li><li><strong>Read-only mode</strong>: Just retrieve data without submitting</li></ul><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Go 1.24 or later</li><li>A Celestia account (created automatically)</li><li>Testnet tokens from the <a href="https://docs.celestia.org/how-to-guides/mocha-testnet#mocha-testnet-faucet" target="_blank" rel="noreferrer">Mocha faucet</a></li></ul><h2 id="quick-setup" tabindex="-1">Quick setup <a class="header-anchor" href="#quick-setup" aria-label="Permalink to &quot;Quick setup&quot;">​</a></h2><h3 id="_1-create-your-project" tabindex="-1">1. Create your project <a class="header-anchor" href="#_1-create-your-project" aria-label="Permalink to &quot;1. Create your project&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-client-example</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-client-example</span></span>
<span class="line"><span style="color:#B392F0;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-client-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-client-example</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-client-example</span></span>
<span class="line"><span style="color:#6F42C1;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-client-example</span></span></code></pre></div><h3 id="_2-create-main-go" tabindex="-1">2. Create main.go <a class="header-anchor" href="#_2-create-main-go" aria-label="Permalink to &quot;2. Create main.go&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">context</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">os</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">time</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/celestiaorg/celestia-node/api/client</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/celestiaorg/celestia-node/blob</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/celestiaorg/celestia-node/nodebuilder/p2p</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/celestiaorg/go-square/v3/share</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/cosmos/cosmos-sdk/crypto/keyring</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	ctx </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> context.</span><span style="color:#79B8FF;">Background</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Get connection details from environment</span></span>
<span class="line"><span style="color:#E1E4E8;">	daURL </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">Getenv</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CELE_DA_URL&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	coreGRPC </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">Getenv</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CELE_CORE_GRPC&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	daTLS </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">Getenv</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CELE_DA_TLS&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	daToken </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">Getenv</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CELE_DA_TOKEN&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	coreTLS </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">Getenv</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CELE_CORE_TLS&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	coreToken </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">Getenv</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CELE_CORE_TOKEN&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> daURL </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Error: Set CELE_DA_URL environment variable&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Example: export CELE_DA_URL=http://localhost:26658&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Create a new account</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Creating account...&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	kr, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.</span><span style="color:#79B8FF;">KeyringWithNewKey</span><span style="color:#E1E4E8;">(client.KeyringConfig{</span></span>
<span class="line"><span style="color:#E1E4E8;">		KeyName:     </span><span style="color:#9ECBFF;">&quot;my_key&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		BackendName: keyring.BackendTest,</span></span>
<span class="line"><span style="color:#E1E4E8;">	}, </span><span style="color:#9ECBFF;">&quot;./keys&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Show your address</span></span>
<span class="line"><span style="color:#E1E4E8;">	keyInfo, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> kr.</span><span style="color:#79B8FF;">Key</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;my_key&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	address, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> keyInfo.</span><span style="color:#79B8FF;">GetAddress</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Your address: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, address.</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Connect to Celestia (read-only or full client)</span></span>
<span class="line"><span style="color:#E1E4E8;">	cfg </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Config{</span></span>
<span class="line"><span style="color:#E1E4E8;">		ReadConfig: client.ReadConfig{</span></span>
<span class="line"><span style="color:#E1E4E8;">			BridgeDAAddr: daURL,</span></span>
<span class="line"><span style="color:#E1E4E8;">			EnableDATLS:  daTLS,</span></span>
<span class="line"><span style="color:#E1E4E8;">		},</span></span>
<span class="line"><span style="color:#E1E4E8;">		SubmitConfig: client.SubmitConfig{</span></span>
<span class="line"><span style="color:#E1E4E8;">			DefaultKeyName: </span><span style="color:#9ECBFF;">&quot;my_key&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		},</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Add DA auth token if provided</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> daToken </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		cfg.ReadConfig.DAAuthToken </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> daToken</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Add Core gRPC config if provided</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> coreGRPC </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		network </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> p2p.</span><span style="color:#79B8FF;">Network</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;mocha-4&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		cfg.SubmitConfig.Network </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> network</span></span>
<span class="line"><span style="color:#E1E4E8;">		cfg.SubmitConfig.CoreGRPCConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> client.CoreGRPCConfig{</span></span>
<span class="line"><span style="color:#E1E4E8;">			Addr:       coreGRPC,</span></span>
<span class="line"><span style="color:#E1E4E8;">			TLSEnabled: coreTLS,</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> coreToken </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			cfg.SubmitConfig.CoreGRPCConfig.AuthToken </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> coreToken</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Full client mode (can submit blobs)&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Read-only mode (cannot submit blobs)&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;To submit blobs, set CELE_CORE_GRPC environment variable&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Connecting to Celestia...&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	c, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.</span><span style="color:#79B8FF;">New</span><span style="color:#E1E4E8;">(ctx, cfg, kr)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">defer</span><span style="color:#E1E4E8;"> c.</span><span style="color:#79B8FF;">Close</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Check your balance</span></span>
<span class="line"><span style="color:#E1E4E8;">	balance, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> c.State.</span><span style="color:#79B8FF;">Balance</span><span style="color:#E1E4E8;">(ctx)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Balance: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, balance.</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Submit a blob only if in full mode</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> coreGRPC </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// Check if account has funds before trying to submit</span></span>
<span class="line"><span style="color:#E1E4E8;">		balanceStr </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> balance.</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> balanceStr </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0utia&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> balanceStr </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0 utia&quot;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Account has no funds. Fund this address at the Mocha faucet to submit blobs:&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">			fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Address: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, address.</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">			fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Faucet: https://docs.celestia.org/how-to-guides/mocha-testnet#mocha-testnet-faucet&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">submitAndRetrieveBlob</span><span style="color:#E1E4E8;">(ctx, c); err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;✓ Tutorial complete!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">submitAndRetrieveBlob</span><span style="color:#E1E4E8;">(ctx context.Context, c </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">client.Client) </span><span style="color:#F97583;">error</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Set timeout for network operations</span></span>
<span class="line"><span style="color:#E1E4E8;">	ctx, cancel </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> context.</span><span style="color:#79B8FF;">WithTimeout</span><span style="color:#E1E4E8;">(ctx, time.Minute)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">defer</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">cancel</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Create namespace (groups your data)</span></span>
<span class="line"><span style="color:#E1E4E8;">	ns, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> share.</span><span style="color:#79B8FF;">NewV0Namespace</span><span style="color:#E1E4E8;">([]</span><span style="color:#79B8FF;">byte</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;tutorial&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> err</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Create blob with your data</span></span>
<span class="line"><span style="color:#E1E4E8;">	message </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello Celestia!&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	blobData </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> []</span><span style="color:#79B8FF;">byte</span><span style="color:#E1E4E8;">(message)</span></span>
<span class="line"><span style="color:#E1E4E8;">	b, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> blob.</span><span style="color:#79B8FF;">NewBlob</span><span style="color:#E1E4E8;">(share.ShareVersionZero, ns, blobData, </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> err</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Submit to network</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Submitting blob...&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	height, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> c.Blob.</span><span style="color:#79B8FF;">Submit</span><span style="color:#E1E4E8;">(ctx, []</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">blob.Blob{b}, </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> err</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;✓ Blob submitted at block </span><span style="color:#79B8FF;">%d\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, height)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Retrieve it back</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Retrieving blob...&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	retrieved, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> c.Blob.</span><span style="color:#79B8FF;">Get</span><span style="color:#E1E4E8;">(ctx, height, ns, b.Commitment)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> err</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Verify the data</span></span>
<span class="line"><span style="color:#E1E4E8;">	retrievedData </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">(retrieved.</span><span style="color:#79B8FF;">Data</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;✓ Retrieved: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, retrievedData)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> retrievedData </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> message {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> fmt.</span><span style="color:#79B8FF;">Errorf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;data mismatch!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;✓ Data verified!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">context</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">os</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">time</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/celestiaorg/celestia-node/api/client</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/celestiaorg/celestia-node/blob</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/celestiaorg/celestia-node/nodebuilder/p2p</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/celestiaorg/go-square/v3/share</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/cosmos/cosmos-sdk/crypto/keyring</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	ctx </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> context.</span><span style="color:#005CC5;">Background</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Get connection details from environment</span></span>
<span class="line"><span style="color:#24292E;">	daURL </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">Getenv</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CELE_DA_URL&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	coreGRPC </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">Getenv</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CELE_CORE_GRPC&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	daTLS </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">Getenv</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CELE_DA_TLS&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#24292E;">	daToken </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">Getenv</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CELE_DA_TOKEN&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	coreTLS </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">Getenv</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CELE_CORE_TLS&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#24292E;">	coreToken </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">Getenv</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CELE_CORE_TOKEN&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> daURL </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Error: Set CELE_DA_URL environment variable&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Example: export CELE_DA_URL=http://localhost:26658&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Create a new account</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Creating account...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	kr, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.</span><span style="color:#005CC5;">KeyringWithNewKey</span><span style="color:#24292E;">(client.KeyringConfig{</span></span>
<span class="line"><span style="color:#24292E;">		KeyName:     </span><span style="color:#032F62;">&quot;my_key&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		BackendName: keyring.BackendTest,</span></span>
<span class="line"><span style="color:#24292E;">	}, </span><span style="color:#032F62;">&quot;./keys&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Show your address</span></span>
<span class="line"><span style="color:#24292E;">	keyInfo, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> kr.</span><span style="color:#005CC5;">Key</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;my_key&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	address, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> keyInfo.</span><span style="color:#005CC5;">GetAddress</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Your address: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, address.</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Connect to Celestia (read-only or full client)</span></span>
<span class="line"><span style="color:#24292E;">	cfg </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Config{</span></span>
<span class="line"><span style="color:#24292E;">		ReadConfig: client.ReadConfig{</span></span>
<span class="line"><span style="color:#24292E;">			BridgeDAAddr: daURL,</span></span>
<span class="line"><span style="color:#24292E;">			EnableDATLS:  daTLS,</span></span>
<span class="line"><span style="color:#24292E;">		},</span></span>
<span class="line"><span style="color:#24292E;">		SubmitConfig: client.SubmitConfig{</span></span>
<span class="line"><span style="color:#24292E;">			DefaultKeyName: </span><span style="color:#032F62;">&quot;my_key&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		},</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Add DA auth token if provided</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> daToken </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		cfg.ReadConfig.DAAuthToken </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> daToken</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Add Core gRPC config if provided</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> coreGRPC </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		network </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> p2p.</span><span style="color:#005CC5;">Network</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;mocha-4&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		cfg.SubmitConfig.Network </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> network</span></span>
<span class="line"><span style="color:#24292E;">		cfg.SubmitConfig.CoreGRPCConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> client.CoreGRPCConfig{</span></span>
<span class="line"><span style="color:#24292E;">			Addr:       coreGRPC,</span></span>
<span class="line"><span style="color:#24292E;">			TLSEnabled: coreTLS,</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> coreToken </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			cfg.SubmitConfig.CoreGRPCConfig.AuthToken </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> coreToken</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Full client mode (can submit blobs)&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Read-only mode (cannot submit blobs)&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;To submit blobs, set CELE_CORE_GRPC environment variable&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Connecting to Celestia...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	c, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.</span><span style="color:#005CC5;">New</span><span style="color:#24292E;">(ctx, cfg, kr)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">defer</span><span style="color:#24292E;"> c.</span><span style="color:#005CC5;">Close</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Check your balance</span></span>
<span class="line"><span style="color:#24292E;">	balance, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> c.State.</span><span style="color:#005CC5;">Balance</span><span style="color:#24292E;">(ctx)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Balance: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, balance.</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Submit a blob only if in full mode</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> coreGRPC </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// Check if account has funds before trying to submit</span></span>
<span class="line"><span style="color:#24292E;">		balanceStr </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> balance.</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> balanceStr </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0utia&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> balanceStr </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0 utia&quot;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Account has no funds. Fund this address at the Mocha faucet to submit blobs:&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">			fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Address: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, address.</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">			fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Faucet: https://docs.celestia.org/how-to-guides/mocha-testnet#mocha-testnet-faucet&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">submitAndRetrieveBlob</span><span style="color:#24292E;">(ctx, c); err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;✓ Tutorial complete!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">submitAndRetrieveBlob</span><span style="color:#24292E;">(ctx context.Context, c </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">client.Client) </span><span style="color:#D73A49;">error</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Set timeout for network operations</span></span>
<span class="line"><span style="color:#24292E;">	ctx, cancel </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> context.</span><span style="color:#005CC5;">WithTimeout</span><span style="color:#24292E;">(ctx, time.Minute)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">defer</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">cancel</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Create namespace (groups your data)</span></span>
<span class="line"><span style="color:#24292E;">	ns, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> share.</span><span style="color:#005CC5;">NewV0Namespace</span><span style="color:#24292E;">([]</span><span style="color:#005CC5;">byte</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tutorial&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> err</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Create blob with your data</span></span>
<span class="line"><span style="color:#24292E;">	message </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello Celestia!&quot;</span></span>
<span class="line"><span style="color:#24292E;">	blobData </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> []</span><span style="color:#005CC5;">byte</span><span style="color:#24292E;">(message)</span></span>
<span class="line"><span style="color:#24292E;">	b, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> blob.</span><span style="color:#005CC5;">NewBlob</span><span style="color:#24292E;">(share.ShareVersionZero, ns, blobData, </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> err</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Submit to network</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Submitting blob...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	height, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> c.Blob.</span><span style="color:#005CC5;">Submit</span><span style="color:#24292E;">(ctx, []</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">blob.Blob{b}, </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> err</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;✓ Blob submitted at block </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, height)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Retrieve it back</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Retrieving blob...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	retrieved, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> c.Blob.</span><span style="color:#005CC5;">Get</span><span style="color:#24292E;">(ctx, height, ns, b.Commitment)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> err</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Verify the data</span></span>
<span class="line"><span style="color:#24292E;">	retrievedData </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">(retrieved.</span><span style="color:#005CC5;">Data</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;✓ Retrieved: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, retrievedData)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> retrievedData </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> message {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> fmt.</span><span style="color:#005CC5;">Errorf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;data mismatch!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;✓ Data verified!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_3-set-up-your-go-mod" tabindex="-1">3. Set up your go.mod <a class="header-anchor" href="#_3-set-up-your-go-mod" aria-label="Permalink to &quot;3. Set up your go.mod&quot;">​</a></h3><p>Create <code>go.mod</code> with these dependencies:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">module celestia</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">client</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">example</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">1.24.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">require (</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestia</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">node v0.</span><span style="color:#79B8FF;">28.2</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">mocha</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/go-</span><span style="color:#E1E4E8;">square</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">v3 v3.</span><span style="color:#79B8FF;">0.2</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">sdk v0.</span><span style="color:#79B8FF;">50.13</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">replace (</span></span>
<span class="line"><span style="color:#E1E4E8;">	cosmossdk.io</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">x</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">upgrade </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">sdk</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">x</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">upgrade v0.</span><span style="color:#79B8FF;">2.0</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cometbft</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cometbft </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestia</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">core v0.</span><span style="color:#79B8FF;">39.10</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">sdk </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">sdk v0.</span><span style="color:#79B8FF;">51.4</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">cosmos</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ibc</span><span style="color:#F97583;">-go/</span><span style="color:#E1E4E8;">v8 </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ibc</span><span style="color:#F97583;">-go/</span><span style="color:#E1E4E8;">v8 v8.</span><span style="color:#79B8FF;">7.2</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">gogo</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">protobuf </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">regen</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">network</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">protobuf v1.</span><span style="color:#79B8FF;">3.3</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">alpha.regen.</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// broken goleveldb needs to be replaced for the cosmos-sdk and celestia-app</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">syndtr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">goleveldb </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">syndtr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">goleveldb v1.</span><span style="color:#79B8FF;">0.1</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">0.20210819022825</span><span style="color:#F97583;">-</span><span style="color:#FDAEB7;font-style:italic;">2ae1ddf74ef7</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// celestia-core(v0.34.x): used for multiplexing abci v1 requests</span></span>
<span class="line"><span style="color:#E1E4E8;">	github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tendermint</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tendermint </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestia</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">core v1.</span><span style="color:#79B8FF;">55.0</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">tm</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">v0.</span><span style="color:#79B8FF;">34.35</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">replace github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ipfs</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">boxo </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">boxo v0.</span><span style="color:#79B8FF;">29.0</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">fork</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">replace github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ipfs</span><span style="color:#F97583;">/go-</span><span style="color:#E1E4E8;">datastore </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> github.com</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">celestiaorg</span><span style="color:#F97583;">/go-</span><span style="color:#E1E4E8;">datastore v0.</span><span style="color:#79B8FF;">0.0</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">20250801131506</span><span style="color:#F97583;">-</span><span style="color:#FDAEB7;font-style:italic;">48a63ae531e4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">module celestia</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">client</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">example</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">go</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">1.24.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">require (</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestia</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">node v0.</span><span style="color:#005CC5;">28.2</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">mocha</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/go-</span><span style="color:#24292E;">square</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">v3 v3.</span><span style="color:#005CC5;">0.2</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">sdk v0.</span><span style="color:#005CC5;">50.13</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">replace (</span></span>
<span class="line"><span style="color:#24292E;">	cosmossdk.io</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">x</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">upgrade </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">sdk</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">x</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">upgrade v0.</span><span style="color:#005CC5;">2.0</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cometbft</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cometbft </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestia</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">core v0.</span><span style="color:#005CC5;">39.10</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">sdk </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">sdk v0.</span><span style="color:#005CC5;">51.4</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">cosmos</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ibc</span><span style="color:#D73A49;">-go/</span><span style="color:#24292E;">v8 </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ibc</span><span style="color:#D73A49;">-go/</span><span style="color:#24292E;">v8 v8.</span><span style="color:#005CC5;">7.2</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">gogo</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">protobuf </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">regen</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">network</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">protobuf v1.</span><span style="color:#005CC5;">3.3</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">alpha.regen.</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// broken goleveldb needs to be replaced for the cosmos-sdk and celestia-app</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">syndtr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">goleveldb </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">syndtr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">goleveldb v1.</span><span style="color:#005CC5;">0.1</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.20210819022825</span><span style="color:#D73A49;">-</span><span style="color:#B31D28;font-style:italic;">2ae1ddf74ef7</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// celestia-core(v0.34.x): used for multiplexing abci v1 requests</span></span>
<span class="line"><span style="color:#24292E;">	github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tendermint</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tendermint </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestia</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">core v1.</span><span style="color:#005CC5;">55.0</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">tm</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">v0.</span><span style="color:#005CC5;">34.35</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">replace github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ipfs</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">boxo </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">boxo v0.</span><span style="color:#005CC5;">29.0</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">fork</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">replace github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ipfs</span><span style="color:#D73A49;">/go-</span><span style="color:#24292E;">datastore </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> github.com</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">celestiaorg</span><span style="color:#D73A49;">/go-</span><span style="color:#24292E;">datastore v0.</span><span style="color:#005CC5;">0.0</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">20250801131506</span><span style="color:#D73A49;">-</span><span style="color:#B31D28;font-style:italic;">48a63ae531e4</span></span></code></pre></div><p>Then run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tidy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tidy</span></span></code></pre></div><h2 id="running-the-tutorial" tabindex="-1">Running the tutorial <a class="header-anchor" href="#running-the-tutorial" aria-label="Permalink to &quot;Running the tutorial&quot;">​</a></h2><h3 id="_1-set-environment-variables" tabindex="-1">1. Set environment variables <a class="header-anchor" href="#_1-set-environment-variables" aria-label="Permalink to &quot;1. Set environment variables&quot;">​</a></h3><p>Choose your connection type:</p><p><strong>QuickNode (recommended for beginners):</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For QuickNode: <code>CELE_DA_URL</code> uses <code>https://</code> and no port, while <code>CELE_CORE_GRPC</code> uses a port (e.g. <code>:9090</code>) and no <code>https://</code> prefix.</p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_DA_URL</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">https://your-quicknode-url.celestia-mocha.quiknode.pro/</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">your-toke</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_DA_TLS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_CORE_GRPC</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">your-quicknode-url:9090</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_CORE_TLS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_CORE_TOKEN</span><span style="color:#F97583;">=&lt;</span><span style="color:#9ECBFF;">your-toke</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_DA_URL</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">https://your-quicknode-url.celestia-mocha.quiknode.pro/</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">your-toke</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_DA_TLS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_CORE_GRPC</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">your-quicknode-url:9090</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_CORE_TLS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_CORE_TOKEN</span><span style="color:#D73A49;">=&lt;</span><span style="color:#032F62;">your-toke</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p><strong>Local bridge node:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_DA_URL</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://localhost:26658</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_DA_TLS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_CORE_GRPC</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">localhost:26657</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_CORE_TLS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_DA_URL</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://localhost:26658</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_DA_TLS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_CORE_GRPC</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">localhost:26657</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_CORE_TLS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span></code></pre></div><p><strong>Read-only mode (no blob submission):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_DA_URL</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://localhost:26658</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> CELE_DA_TLS</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#6A737D;"># Don&#39;t set CELE_CORE_GRPC for read-only mode</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_DA_URL</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://localhost:26658</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> CELE_DA_TLS</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#6A737D;"># Don&#39;t set CELE_CORE_GRPC for read-only mode</span></span></code></pre></div><h3 id="_2-run-the-program" tabindex="-1">2. Run the program <a class="header-anchor" href="#_2-run-the-program" aria-label="Permalink to &quot;2. Run the program&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">main.go</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">main.go</span></span></code></pre></div><p><strong>First run:</strong> You&#39;ll see your account address. Fund it at the <a href="https://docs.celestia.org/how-to-guides/mocha-testnet#mocha-testnet-faucet" target="_blank" rel="noreferrer">Mocha faucet</a>.</p><p><strong>Second run:</strong> After funding, you&#39;ll see:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Creating account...</span></span>
<span class="line"><span style="color:#e1e4e8;">Your address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#e1e4e8;">Full client mode (can submit blobs)</span></span>
<span class="line"><span style="color:#e1e4e8;">Connecting to Celestia...</span></span>
<span class="line"><span style="color:#e1e4e8;">Balance: 1000000utia</span></span>
<span class="line"><span style="color:#e1e4e8;">Submitting blob...</span></span>
<span class="line"><span style="color:#e1e4e8;">✓ Blob submitted at block 1234567</span></span>
<span class="line"><span style="color:#e1e4e8;">Retrieving blob...</span></span>
<span class="line"><span style="color:#e1e4e8;">✓ Retrieved: Hello Celestia!</span></span>
<span class="line"><span style="color:#e1e4e8;">✓ Data verified!</span></span>
<span class="line"><span style="color:#e1e4e8;">✓ Tutorial complete!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Creating account...</span></span>
<span class="line"><span style="color:#24292e;">Your address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#24292e;">Full client mode (can submit blobs)</span></span>
<span class="line"><span style="color:#24292e;">Connecting to Celestia...</span></span>
<span class="line"><span style="color:#24292e;">Balance: 1000000utia</span></span>
<span class="line"><span style="color:#24292e;">Submitting blob...</span></span>
<span class="line"><span style="color:#24292e;">✓ Blob submitted at block 1234567</span></span>
<span class="line"><span style="color:#24292e;">Retrieving blob...</span></span>
<span class="line"><span style="color:#24292e;">✓ Retrieved: Hello Celestia!</span></span>
<span class="line"><span style="color:#24292e;">✓ Data verified!</span></span>
<span class="line"><span style="color:#24292e;">✓ Tutorial complete!</span></span></code></pre></div><p><strong>First run (unfunded account):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Creating account...</span></span>
<span class="line"><span style="color:#e1e4e8;">Your address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#e1e4e8;">Full client mode (can submit blobs)</span></span>
<span class="line"><span style="color:#e1e4e8;">Connecting to Celestia...</span></span>
<span class="line"><span style="color:#e1e4e8;">Balance: 0utia</span></span>
<span class="line"><span style="color:#e1e4e8;">Account has no funds. Fund this address at the Mocha faucet to submit blobs:</span></span>
<span class="line"><span style="color:#e1e4e8;">Address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#e1e4e8;">Faucet: https://docs.celestia.org/how-to-guides/mocha-testnet#mocha-testnet-faucet</span></span>
<span class="line"><span style="color:#e1e4e8;">✓ Tutorial complete!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Creating account...</span></span>
<span class="line"><span style="color:#24292e;">Your address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#24292e;">Full client mode (can submit blobs)</span></span>
<span class="line"><span style="color:#24292e;">Connecting to Celestia...</span></span>
<span class="line"><span style="color:#24292e;">Balance: 0utia</span></span>
<span class="line"><span style="color:#24292e;">Account has no funds. Fund this address at the Mocha faucet to submit blobs:</span></span>
<span class="line"><span style="color:#24292e;">Address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#24292e;">Faucet: https://docs.celestia.org/how-to-guides/mocha-testnet#mocha-testnet-faucet</span></span>
<span class="line"><span style="color:#24292e;">✓ Tutorial complete!</span></span></code></pre></div><p><strong>Read-only mode output:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Creating account...</span></span>
<span class="line"><span style="color:#e1e4e8;">Your address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#e1e4e8;">Read-only mode (cannot submit blobs)</span></span>
<span class="line"><span style="color:#e1e4e8;">To submit blobs, set CELE_CORE_GRPC environment variable</span></span>
<span class="line"><span style="color:#e1e4e8;">Connecting to Celestia...</span></span>
<span class="line"><span style="color:#e1e4e8;">Balance: 1000000utia</span></span>
<span class="line"><span style="color:#e1e4e8;">✓ Tutorial complete!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Creating account...</span></span>
<span class="line"><span style="color:#24292e;">Your address: celestia16k0wsej6rewd2pfh0taah35suzf3apj552q8c3</span></span>
<span class="line"><span style="color:#24292e;">Read-only mode (cannot submit blobs)</span></span>
<span class="line"><span style="color:#24292e;">To submit blobs, set CELE_CORE_GRPC environment variable</span></span>
<span class="line"><span style="color:#24292e;">Connecting to Celestia...</span></span>
<span class="line"><span style="color:#24292e;">Balance: 1000000utia</span></span>
<span class="line"><span style="color:#24292e;">✓ Tutorial complete!</span></span></code></pre></div><h2 id="understanding-the-code" tabindex="-1">Understanding the code <a class="header-anchor" href="#understanding-the-code" aria-label="Permalink to &quot;Understanding the code&quot;">​</a></h2><h3 id="key-components" tabindex="-1">Key components <a class="header-anchor" href="#key-components" aria-label="Permalink to &quot;Key components&quot;">​</a></h3><ul><li><strong>Keyring</strong>: Manages your Celestia account keys</li><li><strong>Client</strong>: Connects to Celestia nodes for read/write operations</li><li><strong>Namespace</strong>: Groups related data together (like a folder)</li><li><strong>Blob</strong>: The data structure you submit to the network</li><li><strong>Commitment</strong>: A hash that uniquely identifies your blob</li></ul><h3 id="connection-types" tabindex="-1">Connection types <a class="header-anchor" href="#connection-types" aria-label="Permalink to &quot;Connection types&quot;">​</a></h3><table><thead><tr><th>Purpose</th><th>Node type</th><th>Example URL</th></tr></thead><tbody><tr><td>Read data</td><td>Bridge node</td><td><code>http://localhost:26658</code></td></tr><tr><td>Submit data</td><td>Consensus node</td><td><code>localhost:26657</code></td></tr></tbody></table><h3 id="read-only-mode" tabindex="-1">Read-only mode <a class="header-anchor" href="#read-only-mode" aria-label="Permalink to &quot;Read-only mode&quot;">​</a></h3><p>To only retrieve data (no submission), remove the <code>SubmitConfig</code> from your client configuration:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cfg </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> client.Config{</span></span>
<span class="line"><span style="color:#E1E4E8;">    ReadConfig: client.ReadConfig{</span></span>
<span class="line"><span style="color:#E1E4E8;">        BridgeDAAddr: daURL,</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// No SubmitConfig for read-only</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cfg </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> client.Config{</span></span>
<span class="line"><span style="color:#24292E;">    ReadConfig: client.ReadConfig{</span></span>
<span class="line"><span style="color:#24292E;">        BridgeDAAddr: daURL,</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// No SubmitConfig for read-only</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next steps&quot;">​</a></h2><ul><li><strong>Production</strong>: Use <code>keyring.BackendFile</code> instead of <code>keyring.BackendTest</code></li><li><strong>Security</strong>: Enable TLS with authentication tokens for production</li><li><strong>Advanced</strong>: Read the <a href="https://github.com/celestiaorg/celestia-node/blob/main/api/client#readme" target="_blank" rel="noreferrer">full client documentation</a></li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><p><strong>&quot;failed to create client&quot;</strong>: Check your node URLs are accessible <strong>&quot;insufficient funds&quot;</strong>: Fund your account at the Mocha faucet <strong>&quot;timeout&quot;</strong>: Increase the context timeout or check network connectivity</p>`,47)]))}const F=n(p,[["render",e]]);export{u as __pageData,F as default};
