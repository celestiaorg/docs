import{_ as a,o as n,c as t,O as o}from"./chunks/framework.6b456e69.js";const h=JSON.parse('{"title":"Running a full node and/or validator","description":"A guide on how to run a full node or validate a full node on your Orbit rollup.","frontmatter":{"description":"A guide on how to run a full node or validate a full node on your Orbit rollup.","next":{"text":"Introduction to OP Stack integration","link":"/how-to-guides/intro-to-op-stack"},"head":[["meta",{"property":"og:title","content":"Running a full node and/or validator | Celestia Docs"}],["meta",{"property":"og:description","content":"A guide on how to run a full node or validate a full node on your Orbit rollup."}]]},"headers":[],"relativePath":"how-to-guides/arbitrum-full-node.md","filePath":"how-to-guides/arbitrum-full-node.md","lastUpdated":1748948702000}'),r={name:"how-to-guides/arbitrum-full-node.md"};function l(i,e,s,u,d,p){return n(),t("div",null,e[0]||(e[0]=[o(`<h1 id="running-a-full-node-and-or-validator" tabindex="-1">Running a full node and/or validator <a class="header-anchor" href="#running-a-full-node-and-or-validator" aria-label="Permalink to &quot;Running a full node and/or validator&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Familiarity with Ethereum, Ethereum&#39;s testnets, Arbitrum, and Celestia</li><li><a href="https://docs.arbitrum.io/launch-orbit-chain/orbit-gentle-introduction" target="_blank" rel="noreferrer">A gentle introduction: Orbit chains</a></li><li><a href="/how-to-guides/arbitrum-integration">Arbitrum Orbit integration overview</a></li></ul><h2 id="running-a-full-node" tabindex="-1">Running a full node <a class="header-anchor" href="#running-a-full-node" aria-label="Permalink to &quot;Running a full node&quot;">​</a></h2><p>Running a fullnode or validator for an Orbit chain with Celestia DA is as simple as <a href="https://docs.arbitrum.io/run-arbitrum-node/run-full-node" target="_blank" rel="noreferrer">following the steps outlined in the Arbitrum docs</a>, but using a docker image from the <a href="https://github.com/celestiaorg/nitro/releases" target="_blank" rel="noreferrer">latest stable release</a> of the Celestia integration and passing the following flags:</p><ul><li><code>node.celestia-cfg.enable=true</code></li><li><code>node.celestia-cfg.url=$URL_TO_DA_SERVER</code></li></ul><p>or adding the following to your config:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&quot;node&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;"> ...</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;celestia-cfg&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;enable&quot;: true,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;url&quot;: &quot;DA_SERVER_URL&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    },</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&quot;node&quot;: {</span></span>
<span class="line"><span style="color:#24292e;"> ...</span></span>
<span class="line"><span style="color:#24292e;">    &quot;celestia-cfg&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">        &quot;enable&quot;: true,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;url&quot;: &quot;DA_SERVER_URL&quot;</span></span>
<span class="line"><span style="color:#24292e;">    },</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h2 id="running-a-celestia-da-server" tabindex="-1">Running a Celestia DA server <a class="header-anchor" href="#running-a-celestia-da-server" aria-label="Permalink to &quot;Running a Celestia DA server&quot;">​</a></h2><p>For instructions on how to run a DA server, please refer to the <a href="https://github.com/celestiaorg/nitro-das-celestia" target="_blank" rel="noreferrer">repo docs</a>.</p><p>Note that you can either run a light node, a bridge node, or a paid provider like <a href="https://www.quicknode.com/docs/celestia" target="_blank" rel="noreferrer">Quicknode</a> to connect your DA Server with the targeted Celestia network.</p><h2 id="running-a-full-node-with-validation" tabindex="-1">Running a full node with validation <a class="header-anchor" href="#running-a-full-node-with-validation" aria-label="Permalink to &quot;Running a full node with validation&quot;">​</a></h2><p>The information above applies to <a href="https://docs.arbitrum.io/node-running/how-tos/running-a-validator" target="_blank" rel="noreferrer">the steps outlined to run a validating full node (validator)</a>, with the addition of <a href="https://github.com/celestiaorg/nitro-das-celestia?tab=readme-ov-file#running-a-validator" target="_blank" rel="noreferrer">configuring the DA Server to run as a validator</a>.</p><p>Finally, note that this will require connection to a DA node, and we recommend running a Bridge node if you will be instantiating multiple rollups.</p>`,14)]))}const g=a(r,[["render",l]]);export{h as __pageData,g as default};
