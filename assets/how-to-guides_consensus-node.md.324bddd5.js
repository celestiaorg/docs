import{c as n}from"./chunks/constants.c56ae276.js";import{A as r,o as i,c,O as o,k as a,t as e,l,a as t,E as d}from"./chunks/framework.6b456e69.js";const y="/img/nodes/consensus-node.jpg",u={class:"vp-code-group vp-adaptive-theme"},E={class:"blocks"},h={class:"language-bash vp-adaptive-theme active"},F={class:"shiki github-dark vp-code-dark"},g={class:"line"},b={style:{color:"#9ECBFF"}},C={class:"shiki github-light vp-code-light"},v={class:"line"},m={style:{color:"#032F62"}},k={class:"language-bash vp-adaptive-theme"},f={class:"shiki github-dark vp-code-dark"},B={class:"line"},q={style:{color:"#9ECBFF"}},w={class:"shiki github-light vp-code-light"},S={class:"line"},x={style:{color:"#032F62"}},P={class:"language-bash vp-adaptive-theme"},A={class:"shiki github-dark vp-code-dark"},T={class:"line"},I={style:{color:"#9ECBFF"}},D={class:"shiki github-light vp-code-light"},R={class:"line"},N={style:{color:"#032F62"}},O={class:"vp-code-group vp-adaptive-theme"},$={class:"blocks"},M={class:"language-bash vp-adaptive-theme active"},j={class:"shiki github-dark vp-code-dark"},H={class:"line"},L={style:{color:"#9ECBFF"}},Q={class:"shiki github-light vp-code-light"},U={class:"line"},K={style:{color:"#032F62"}},z={class:"language-bash vp-adaptive-theme"},W={class:"shiki github-dark vp-code-dark"},V={class:"line"},Y={style:{color:"#9ECBFF"}},Z={class:"shiki github-light vp-code-light"},X={class:"line"},G={style:{color:"#032F62"}},J={class:"language-bash vp-adaptive-theme"},_={class:"shiki github-dark vp-code-dark"},ss={class:"line"},as={style:{color:"#9ECBFF"}},os={class:"shiki github-light vp-code-light"},ns={class:"line"},es={style:{color:"#032F62"}},ls={class:"vp-code-group vp-adaptive-theme"},ts={class:"blocks"},ps={class:"language-bash vp-adaptive-theme active"},rs={class:"shiki github-dark vp-code-dark"},is={class:"line"},cs={style:{color:"#9ECBFF"}},ds={class:"shiki github-light vp-code-light"},ys={class:"line"},us={style:{color:"#032F62"}},Es={class:"language-bash vp-adaptive-theme"},hs={class:"shiki github-dark vp-code-dark"},Fs={class:"line"},gs={style:{color:"#9ECBFF"}},bs={class:"shiki github-light vp-code-light"},Cs={class:"line"},vs={style:{color:"#032F62"}},ms={class:"vp-code-group vp-adaptive-theme"},ks={class:"blocks"},fs={class:"language-bash vp-adaptive-theme active"},Bs={class:"shiki github-dark vp-code-dark"},qs={class:"line"},ws={style:{color:"#9ECBFF"}},Ss={class:"shiki github-light vp-code-light"},xs={class:"line"},Ps={style:{color:"#032F62"}},As={class:"language-bash vp-adaptive-theme"},Ts={class:"shiki github-dark vp-code-dark"},Is={class:"line"},Ds={style:{color:"#9ECBFF"}},Rs={class:"shiki github-light vp-code-light"},Ns={class:"line"},Os={style:{color:"#032F62"}},$s={class:"language-bash vp-adaptive-theme"},Ms={class:"shiki github-dark vp-code-dark"},js={class:"line"},Hs={style:{color:"#9ECBFF"}},Ls={class:"shiki github-light vp-code-light"},Qs={class:"line"},Us={style:{color:"#032F62"}},Ks={class:"vp-code-group vp-adaptive-theme"},zs={class:"blocks"},Ws={class:"language-bash vp-adaptive-theme active"},Vs={class:"shiki github-dark vp-code-dark"},Ys={class:"line"},Zs={style:{color:"#9ECBFF"}},Xs={class:"shiki github-light vp-code-light"},Gs={class:"line"},Js={style:{color:"#032F62"}},_s={class:"language-bash vp-adaptive-theme"},sa={class:"shiki github-dark vp-code-dark"},aa={class:"line"},oa={style:{color:"#9ECBFF"}},na={class:"shiki github-light vp-code-light"},ea={class:"line"},la={style:{color:"#032F62"}},ta={class:"language-bash vp-adaptive-theme"},pa={class:"shiki github-dark vp-code-dark"},ra={class:"line"},ia={style:{color:"#9ECBFF"}},ca={class:"shiki github-light vp-code-light"},da={class:"line"},ya={style:{color:"#032F62"}},ba=JSON.parse('{"title":"Consensus node","description":"Learn how to set up a Celestia consensus node.","frontmatter":{"description":"Learn how to set up a Celestia consensus node.","outline":"deep","head":[["meta",{"property":"og:title","content":"Consensus node | Celestia Docs"}],["meta",{"property":"og:description","content":"Learn how to set up a Celestia consensus node."}]]},"headers":[],"relativePath":"how-to-guides/consensus-node.md","filePath":"how-to-guides/consensus-node.md","lastUpdated":1759846787000}'),ua={name:"how-to-guides/consensus-node.md"},Ca=Object.assign(ua,{setup(Ea){return(ha,s)=>{const p=r("NetworkScriptLinks");return i(),c("div",null,[s[161]||(s[161]=o('<h1 id="consensus-node" tabindex="-1">Consensus node <a class="header-anchor" href="#consensus-node" aria-label="Permalink to &quot;Consensus node&quot;">​</a></h1><p>This guide covers how to set up a consensus node on Celestia. Consensus nodes allow you to sync the entire blockchain history in the Celestia consensus layer.</p><p><img src="'+y+'" alt="consensus node"></p><h2 id="minimum-hardware-requirements" tabindex="-1">Minimum hardware requirements <a class="header-anchor" href="#minimum-hardware-requirements" aria-label="Permalink to &quot;Minimum hardware requirements&quot;">​</a></h2><p>See <a href="/how-to-guides/nodes-overview#recommended-celestia-node-requirements">hardware requirements</a>.</p><h2 id="set-up-a-consensus-node" tabindex="-1">Set up a consensus node <a class="header-anchor" href="#set-up-a-consensus-node" aria-label="Permalink to &quot;Set up a consensus node&quot;">​</a></h2><p>The following tutorial is done on an Ubuntu Linux 20.04 (LTS) x64 instance machine.</p><h3 id="set-up-the-dependencies" tabindex="-1">Set up the dependencies <a class="header-anchor" href="#set-up-the-dependencies" aria-label="Permalink to &quot;Set up the dependencies&quot;">​</a></h3><p>Follow the instructions on <a href="/how-to-guides/environment">installing dependencies</a>.</p><h3 id="install-celestia-app" tabindex="-1">Install celestia-app <a class="header-anchor" href="#install-celestia-app" aria-label="Permalink to &quot;Install celestia-app&quot;">​</a></h3><p>Follow the tutorial on <a href="/how-to-guides/celestia-app">installing <code>celestia-app</code></a>.</p><h3 id="set-up-the-p2p-networks" tabindex="-1">Set up the P2P networks <a class="header-anchor" href="#set-up-the-p2p-networks" aria-label="Permalink to &quot;Set up the P2P networks&quot;">​</a></h3><p>To initialize the network, pick a &quot;node-name&quot; that describes your node. Keep in mind that this might change if a new testnet is deployed.</p>',13)),a("div",u,[s[12]||(s[12]=o('<div class="tabs"><input type="radio" name="group-KwN1S" id="tab-uPAffQd" checked="checked"><label for="tab-uPAffQd">Mainnet Beta</label><input type="radio" name="group-KwN1S" id="tab-KREU5sO"><label for="tab-KREU5sO">Mocha</label><input type="radio" name="group-KwN1S" id="tab--dFLwpi"><label for="tab--dFLwpi">Arabica</label></div>',1)),a("div",E,[a("div",h,[s[2]||(s[2]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[3]||(s[3]=a("span",{class:"lang"},"bash",-1)),a("pre",F,[a("code",null,[a("span",g,[s[0]||(s[0]=o('<span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node-name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain-id</span><span style="color:#E1E4E8;"> </span>',8)),a("span",b,e(l(n).mainnetChainId),1)])])]),a("pre",C,[a("code",null,[a("span",v,[s[1]||(s[1]=o('<span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node-name&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain-id</span><span style="color:#24292E;"> </span>',8)),a("span",m,e(l(n).mainnetChainId),1)])])])]),a("div",k,[s[6]||(s[6]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[7]||(s[7]=a("span",{class:"lang"},"bash",-1)),a("pre",f,[a("code",null,[a("span",B,[s[4]||(s[4]=o('<span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node-name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain-id</span><span style="color:#E1E4E8;"> </span>',8)),a("span",q,e(l(n).mochaChainId),1)])])]),a("pre",w,[a("code",null,[a("span",S,[s[5]||(s[5]=o('<span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node-name&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain-id</span><span style="color:#24292E;"> </span>',8)),a("span",x,e(l(n).mochaChainId),1)])])])]),a("div",P,[s[10]||(s[10]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[11]||(s[11]=a("span",{class:"lang"},"bash",-1)),a("pre",A,[a("code",null,[a("span",T,[s[8]||(s[8]=o('<span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node-name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain-id</span><span style="color:#E1E4E8;"> </span>',8)),a("span",I,e(l(n).arabicaChainId),1)])])]),a("pre",D,[a("code",null,[a("span",R,[s[9]||(s[9]=o('<span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node-name&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain-id</span><span style="color:#24292E;"> </span>',8)),a("span",N,e(l(n).arabicaChainId),1)])])])])])]),s[162]||(s[162]=a("p",null,[t("Download the "),a("code",null,"genesis.json"),t(" file:")],-1)),a("div",O,[s[43]||(s[43]=o('<div class="tabs"><input type="radio" name="group-PxndW" id="tab-kd_mkhd" checked="checked"><label for="tab-kd_mkhd">Mainnet Beta</label><input type="radio" name="group-PxndW" id="tab-5miyr-z"><label for="tab-5miyr-z">Mocha</label><input type="radio" name="group-PxndW" id="tab-EaIbMhU"><label for="tab-EaIbMhU">Arabica</label></div>',1)),a("div",$,[a("div",M,[s[21]||(s[21]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[22]||(s[22]=a("span",{class:"lang"},"bash",-1)),a("pre",j,[a("code",null,[a("span",H,[s[13]||(s[13]=a("span",{style:{color:"#B392F0"}},"celestia-appd",-1)),s[14]||(s[14]=a("span",{style:{color:"#E1E4E8"}}," ",-1)),s[15]||(s[15]=a("span",{style:{color:"#9ECBFF"}},"download-genesis",-1)),s[16]||(s[16]=a("span",{style:{color:"#E1E4E8"}}," ",-1)),a("span",L,e(l(n).mainnetChainId),1)])])]),a("pre",Q,[a("code",null,[a("span",U,[s[17]||(s[17]=a("span",{style:{color:"#6F42C1"}},"celestia-appd",-1)),s[18]||(s[18]=a("span",{style:{color:"#24292E"}}," ",-1)),s[19]||(s[19]=a("span",{style:{color:"#032F62"}},"download-genesis",-1)),s[20]||(s[20]=a("span",{style:{color:"#24292E"}}," ",-1)),a("span",K,e(l(n).mainnetChainId),1)])])])]),a("div",z,[s[31]||(s[31]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[32]||(s[32]=a("span",{class:"lang"},"bash",-1)),a("pre",W,[a("code",null,[a("span",V,[s[23]||(s[23]=a("span",{style:{color:"#B392F0"}},"celestia-appd",-1)),s[24]||(s[24]=a("span",{style:{color:"#E1E4E8"}}," ",-1)),s[25]||(s[25]=a("span",{style:{color:"#9ECBFF"}},"download-genesis",-1)),s[26]||(s[26]=a("span",{style:{color:"#E1E4E8"}}," ",-1)),a("span",Y,e(l(n).mochaChainId),1)])])]),a("pre",Z,[a("code",null,[a("span",X,[s[27]||(s[27]=a("span",{style:{color:"#6F42C1"}},"celestia-appd",-1)),s[28]||(s[28]=a("span",{style:{color:"#24292E"}}," ",-1)),s[29]||(s[29]=a("span",{style:{color:"#032F62"}},"download-genesis",-1)),s[30]||(s[30]=a("span",{style:{color:"#24292E"}}," ",-1)),a("span",G,e(l(n).mochaChainId),1)])])])]),a("div",J,[s[41]||(s[41]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[42]||(s[42]=a("span",{class:"lang"},"bash",-1)),a("pre",_,[a("code",null,[a("span",ss,[s[33]||(s[33]=a("span",{style:{color:"#B392F0"}},"celestia-appd",-1)),s[34]||(s[34]=a("span",{style:{color:"#E1E4E8"}}," ",-1)),s[35]||(s[35]=a("span",{style:{color:"#9ECBFF"}},"download-genesis",-1)),s[36]||(s[36]=a("span",{style:{color:"#E1E4E8"}}," ",-1)),a("span",as,e(l(n).arabicaChainId),1)])])]),a("pre",os,[a("code",null,[a("span",ns,[s[37]||(s[37]=a("span",{style:{color:"#6F42C1"}},"celestia-appd",-1)),s[38]||(s[38]=a("span",{style:{color:"#24292E"}}," ",-1)),s[39]||(s[39]=a("span",{style:{color:"#032F62"}},"download-genesis",-1)),s[40]||(s[40]=a("span",{style:{color:"#24292E"}}," ",-1)),a("span",es,e(l(n).arabicaChainId),1)])])])])])]),s[163]||(s[163]=a("p",null,[t("Set seeds in the "),a("code",null,"$HOME/.celestia-app/config/config.toml"),t(" file:")],-1)),a("div",ls,[s[73]||(s[73]=o('<div class="tabs"><input type="radio" name="group-4jnKN" id="tab-T4vqmtX" checked="checked"><label for="tab-T4vqmtX">Mainnet Beta</label><input type="radio" name="group-4jnKN" id="tab-D6UBbzD"><label for="tab-D6UBbzD">Mocha</label><input type="radio" name="group-4jnKN" id="tab-OhjI4Sn"><label for="tab-OhjI4Sn">Arabica</label></div>',1)),a("div",ts,[a("div",ps,[s[56]||(s[56]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[57]||(s[57]=a("span",{class:"lang"},"bash",-1)),a("pre",rs,[a("code",null,[a("span",is,[s[44]||(s[44]=o('<span style="color:#E1E4E8;">SEEDS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6)),a("span",cs," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).mainnetChainId)+"/seeds.txt ",1),s[45]||(s[45]=a("span",{style:{color:"#F97583"}},"|",-1)),s[46]||(s[46]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[47]||(s[47]=a("span",{style:{color:"#B392F0"}},"tr",-1)),s[48]||(s[48]=a("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1))]),s[49]||(s[49]=o(`
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> $SEEDS</span></span>
<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$SEEDS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>`,4))])]),a("pre",ds,[a("code",null,[a("span",ys,[s[50]||(s[50]=o('<span style="color:#24292E;">SEEDS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6)),a("span",us," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).mainnetChainId)+"/seeds.txt ",1),s[51]||(s[51]=a("span",{style:{color:"#D73A49"}},"|",-1)),s[52]||(s[52]=a("span",{style:{color:"#032F62"}}," ",-1)),s[53]||(s[53]=a("span",{style:{color:"#6F42C1"}},"tr",-1)),s[54]||(s[54]=a("span",{style:{color:"#032F62"}}," '\\n' ',')",-1))]),s[55]||(s[55]=o(`
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> $SEEDS</span></span>
<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$SEEDS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>`,4))])])]),a("div",Es,[s[70]||(s[70]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[71]||(s[71]=a("span",{class:"lang"},"bash",-1)),a("pre",hs,[a("code",null,[a("span",Fs,[s[58]||(s[58]=o('<span style="color:#E1E4E8;">SEEDS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6)),a("span",gs," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).mochaChainId)+"/seeds.txt ",1),s[59]||(s[59]=a("span",{style:{color:"#F97583"}},"|",-1)),s[60]||(s[60]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[61]||(s[61]=a("span",{style:{color:"#B392F0"}},"tr",-1)),s[62]||(s[62]=a("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1))]),s[63]||(s[63]=o(`
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> $SEEDS</span></span>
<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$SEEDS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>`,4))])]),a("pre",bs,[a("code",null,[a("span",Cs,[s[64]||(s[64]=o('<span style="color:#24292E;">SEEDS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6)),a("span",vs," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).mochaChainId)+"/seeds.txt ",1),s[65]||(s[65]=a("span",{style:{color:"#D73A49"}},"|",-1)),s[66]||(s[66]=a("span",{style:{color:"#032F62"}}," ",-1)),s[67]||(s[67]=a("span",{style:{color:"#6F42C1"}},"tr",-1)),s[68]||(s[68]=a("span",{style:{color:"#032F62"}}," '\\n' ',')",-1))]),s[69]||(s[69]=o(`
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> $SEEDS</span></span>
<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^seeds *=.*/seeds = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$SEEDS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>`,4))])])]),s[72]||(s[72]=o(`<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># For Arabica, you can set seeds manually in the</span></span>
<span class="line"><span style="color:#6A737D;"># \`$HOME/.celestia-app/config/config.toml\` file:</span></span>
<span class="line"><span style="color:#6A737D;"># Comma separated list of seed nodes to connect to</span></span>
<span class="line"><span style="color:#B392F0;">seeds</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># For Arabica, you can set seeds manually in the</span></span>
<span class="line"><span style="color:#6A737D;"># \`$HOME/.celestia-app/config/config.toml\` file:</span></span>
<span class="line"><span style="color:#6A737D;"># Comma separated list of seed nodes to connect to</span></span>
<span class="line"><span style="color:#6F42C1;">seeds</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span></code></pre></div>`,1))])]),a("details",null,[s[111]||(s[111]=o('<summary>Optional: Set persistent peers</summary><p>Optionally, you can set persistent peers in your <code>config.toml</code> file. If you set persistent peers, your node will <strong>always</strong> try to connect to these peers. This is useful when running a local devnet, for example, when you would always want to connect to the same local nodes in your devnet. In production, setting persistent peers is advised only if you are running a <a href="https://hub.cosmos.network/main/validators/security.html#sentry-nodes-ddos-protection" target="_blank" rel="noreferrer">sentry node</a>.</p><p>You can get the persistent peers from the <a href="https://github.com/cosmos/chain-registry" target="_blank" rel="noreferrer">@cosmos/chain-registry</a> repository (for Mainnet Beta) or <a href="https://github.com/celestiaorg/networks" target="_blank" rel="noreferrer">@celestiaorg/networks repository</a> repo (for Mocha and Arabica) with the following commands:</p>',3)),a("div",ms,[s[110]||(s[110]=o('<div class="tabs"><input type="radio" name="group-ZN1PB" id="tab-QIctJzk" checked="checked"><label for="tab-QIctJzk">Mainnet Beta</label><input type="radio" name="group-ZN1PB" id="tab-sp5BQKs"><label for="tab-sp5BQKs">Mocha</label><input type="radio" name="group-ZN1PB" id="tab-k75r_Ew"><label for="tab-k75r_Ew">Arabica</label></div>',1)),a("div",ks,[a("div",fs,[s[80]||(s[80]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[81]||(s[81]=a("span",{class:"lang"},"bash",-1)),a("pre",Bs,[a("code",null,[a("span",qs,[s[74]||(s[74]=o('<span style="color:#E1E4E8;">PERSISTENT_PEERS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span>',6)),a("span",ws," https://raw.githubusercontent.com/cosmos/chain-registry/master/"+e(l(n).mainnetChainId)+"/chain.json ",1),s[75]||(s[75]=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">jq</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#9ECBFF;"> &#39;.peers.persistent_peers[].address&#39; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> &#39;\\n&#39; &#39;,&#39; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">sed</span><span style="color:#9ECBFF;"> &#39;s/,$/\\n/&#39;)</span>',14))]),s[76]||(s[76]=o(`
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> $PERSISTENT_PEERS</span></span>
<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$PERSISTENT_PEERS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>`,4))])]),a("pre",Ss,[a("code",null,[a("span",xs,[s[77]||(s[77]=o('<span style="color:#24292E;">PERSISTENT_PEERS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span>',6)),a("span",Ps," https://raw.githubusercontent.com/cosmos/chain-registry/master/"+e(l(n).mainnetChainId)+"/chain.json ",1),s[78]||(s[78]=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">jq</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-r</span><span style="color:#032F62;"> &#39;.peers.persistent_peers[].address&#39; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> &#39;\\n&#39; &#39;,&#39; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">sed</span><span style="color:#032F62;"> &#39;s/,$/\\n/&#39;)</span>',14))]),s[79]||(s[79]=o(`
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> $PERSISTENT_PEERS</span></span>
<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$PERSISTENT_PEERS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>`,4))])])]),a("div",As,[s[94]||(s[94]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[95]||(s[95]=a("span",{class:"lang"},"bash",-1)),a("pre",Ts,[a("code",null,[a("span",Is,[s[82]||(s[82]=o('<span style="color:#E1E4E8;">PERSISTENT_PEERS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6)),a("span",Ds," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).mochaChainId)+"/peers.txt ",1),s[83]||(s[83]=a("span",{style:{color:"#F97583"}},"|",-1)),s[84]||(s[84]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[85]||(s[85]=a("span",{style:{color:"#B392F0"}},"tr",-1)),s[86]||(s[86]=a("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1))]),s[87]||(s[87]=o(`
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> $PERSISTENT_PEERS</span></span>
<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$PERSISTENT_PEERS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>`,4))])]),a("pre",Rs,[a("code",null,[a("span",Ns,[s[88]||(s[88]=o('<span style="color:#24292E;">PERSISTENT_PEERS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6)),a("span",Os," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).mochaChainId)+"/peers.txt ",1),s[89]||(s[89]=a("span",{style:{color:"#D73A49"}},"|",-1)),s[90]||(s[90]=a("span",{style:{color:"#032F62"}}," ",-1)),s[91]||(s[91]=a("span",{style:{color:"#6F42C1"}},"tr",-1)),s[92]||(s[92]=a("span",{style:{color:"#032F62"}}," '\\n' ',')",-1))]),s[93]||(s[93]=o(`
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> $PERSISTENT_PEERS</span></span>
<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$PERSISTENT_PEERS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>`,4))])])]),a("div",$s,[s[108]||(s[108]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[109]||(s[109]=a("span",{class:"lang"},"bash",-1)),a("pre",Ms,[a("code",null,[a("span",js,[s[96]||(s[96]=o('<span style="color:#E1E4E8;">PERSISTENT_PEERS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-sL</span>',6)),a("span",Hs," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).arabicaChainId)+"/peers.txt ",1),s[97]||(s[97]=a("span",{style:{color:"#F97583"}},"|",-1)),s[98]||(s[98]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[99]||(s[99]=a("span",{style:{color:"#B392F0"}},"tr",-1)),s[100]||(s[100]=a("span",{style:{color:"#9ECBFF"}}," '\\n' ',')",-1))]),s[101]||(s[101]=o(`
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> $PERSISTENT_PEERS</span></span>
<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#E1E4E8;">$PERSISTENT_PEERS</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">/&quot;</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span>`,4))])]),a("pre",Ls,[a("code",null,[a("span",Qs,[s[102]||(s[102]=o('<span style="color:#24292E;">PERSISTENT_PEERS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-sL</span>',6)),a("span",Us," https://raw.githubusercontent.com/celestiaorg/networks/master/"+e(l(n).arabicaChainId)+"/peers.txt ",1),s[103]||(s[103]=a("span",{style:{color:"#D73A49"}},"|",-1)),s[104]||(s[104]=a("span",{style:{color:"#032F62"}}," ",-1)),s[105]||(s[105]=a("span",{style:{color:"#6F42C1"}},"tr",-1)),s[106]||(s[106]=a("span",{style:{color:"#032F62"}}," '\\n' ',')",-1))]),s[107]||(s[107]=o(`
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> $PERSISTENT_PEERS</span></span>
<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^persistent_peers *=.*/persistent_peers = </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#24292E;">$PERSISTENT_PEERS</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">/&quot;</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span>`,4))])])])])])]),s[164]||(s[164]=o(`<h2 id="storage-and-pruning-configurations" tabindex="-1">Storage and pruning configurations <a class="header-anchor" href="#storage-and-pruning-configurations" aria-label="Permalink to &quot;Storage and pruning configurations&quot;">​</a></h2><h3 id="optional-connect-a-consensus-node-to-a-bridge-node" tabindex="-1">Optional: Connect a consensus node to a bridge node <a class="header-anchor" href="#optional-connect-a-consensus-node-to-a-bridge-node" aria-label="Permalink to &quot;Optional: Connect a consensus node to a bridge node&quot;">​</a></h3><p>If your consensus node is being connected to a celestia-node bridge node, you will need to enable transaction indexing and retain all block data. This can be achieved with the following settings in your <code>config.toml</code>.</p><h4 id="enable-transaction-indexing" tabindex="-1">Enable transaction indexing <a class="header-anchor" href="#enable-transaction-indexing" aria-label="Permalink to &quot;Enable transaction indexing&quot;">​</a></h4><p>There is currently no way of entirely disabling indexing. Set the <code>indexer</code> to <code>&quot;null&quot;</code> in your <code>config.toml</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">indexer = </span><span style="color:#9ECBFF;">&quot;null&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">indexer = </span><span style="color:#032F62;">&quot;null&quot;</span></span></code></pre></div><p>The <code>null</code> indexer is a lightweight indexer that is sufficient for bridge nodes.</p><h4 id="retain-all-block-data" tabindex="-1">Retain all block data <a class="header-anchor" href="#retain-all-block-data" aria-label="Permalink to &quot;Retain all block data&quot;">​</a></h4><p>And in your <code>app.toml</code>, <code>min-retain-blocks</code> should remain as the default setting of <code>0</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">min-retain-blocks = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># retain all block data, this is default setting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">min-retain-blocks = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># retain all block data, this is default setting</span></span></code></pre></div><h3 id="query-transactions-by-hash" tabindex="-1">Query transactions by hash <a class="header-anchor" href="#query-transactions-by-hash" aria-label="Permalink to &quot;Query transactions by hash&quot;">​</a></h3><p>To query transactions using their hash, transaction indexing must be turned on. Set the <code>indexer</code> to <code>&quot;kv&quot;</code> in your <code>config.toml</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">indexer = </span><span style="color:#9ECBFF;">&quot;kv&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">indexer = </span><span style="color:#032F62;">&quot;kv&quot;</span></span></code></pre></div><h3 id="optional-access-historical-state" tabindex="-1">Optional: Access historical state <a class="header-anchor" href="#optional-access-historical-state" aria-label="Permalink to &quot;Optional: Access historical state&quot;">​</a></h3><p>If you want to query the historical state — for example, you might want to know the balance of a Celestia wallet at a given height in the past — you should run an archive node with <code>pruning = &quot;nothing&quot;</code> in your <code>app.toml</code>. Note that this configuration is resource-intensive and will require significant storage:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pruning = </span><span style="color:#9ECBFF;">&quot;nothing&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pruning = </span><span style="color:#032F62;">&quot;nothing&quot;</span></span></code></pre></div><h3 id="save-on-storage-requirements" tabindex="-1">Save on storage requirements <a class="header-anchor" href="#save-on-storage-requirements" aria-label="Permalink to &quot;Save on storage requirements&quot;">​</a></h3><p>If you want to save on storage requirements, consider using <code>pruning = &quot;everything&quot;</code> in your <code>app.toml</code> to prune everything. If you select <code>&quot;everything&quot;</code> or <code>&quot;default&quot;</code>, but still want to keep the block data, you can do so by not changing the default value of <code>min-retain-blocks = 0</code> in your <code>app.toml</code>. A value of <code>0</code> for <code>min-retain-blocks</code> will keep all block data. This will prune snapshots of the state, but it will keep block data:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pruning = </span><span style="color:#9ECBFF;">&quot;everything&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">min-retain-blocks = </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># this is the default setting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pruning = </span><span style="color:#032F62;">&quot;everything&quot;</span></span>
<span class="line"><span style="color:#24292E;">min-retain-blocks = </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># this is the default setting</span></span></code></pre></div><h2 id="sync-types" tabindex="-1">Sync types <a class="header-anchor" href="#sync-types" aria-label="Permalink to &quot;Sync types&quot;">​</a></h2><table><thead><tr><th>Sync mode</th><th>Time</th><th>Notes</th></tr></thead><tbody><tr><td>Block sync</td><td>~3 weeks</td><td>Downloads and executes all blocks from genesis to the tip</td></tr><tr><td>State sync</td><td>~1 hour</td><td>Downloads a snapshot of the state then downloads and executes all blocks after that snapshot to the tip.</td></tr><tr><td>Quick sync</td><td>~5 hours</td><td>Downloads the data directory from a node. Time depends on your download speed because the data being downloaded can exceed 1 TB for mainnet.</td></tr></tbody></table><h3 id="option-1-block-sync" tabindex="-1">Option 1: Block sync <a class="header-anchor" href="#option-1-block-sync" aria-label="Permalink to &quot;Option 1: Block sync&quot;">​</a></h3><p>By default, a consensus node will sync using block sync; which will request, validate and execute every block up to the head of the blockchain. This is the most secure mechanism yet the slowest (taking up to weeks depending on the height of the blockchain).</p><p>There is an <a href="https://github.com/celestiaorg/celestia-app/issues/4370" target="_blank" rel="noreferrer">issue</a> that prevents recent celestia-app binaries from block syncing Mainnet Beta. As a temporary workaround, you can use celestia-app <a href="https://github.com/celestiaorg/celestia-app/releases/tag/v3.0.2" target="_blank" rel="noreferrer">v3.0.2</a> to block sync Mainnet Beta until that issue is resolved. After block syncing, please upgrade to the latest version of celestia-app to pick up recent security fixes.</p><p>There are two alternatives for quicker syncing.</p><h3 id="option-2-state-sync" tabindex="-1">Option 2: State sync <a class="header-anchor" href="#option-2-state-sync" aria-label="Permalink to &quot;Option 2: State sync&quot;">​</a></h3><p>State sync uses light client verification to verify state snapshots from peers and then apply them. State sync relies on weak subjectivity; a trusted header (specifically the hash and height) must be provided. This can be found by querying a trusted RPC endpoint (/block). RPC endpoints are also required for retrieving light blocks. These can be found in the docs here under the respective networks or from <a href="https://github.com/cosmos/chain-registry" target="_blank" rel="noreferrer">the chain-registry</a>.</p><h4 id="state-sync-quick-start-scripts" tabindex="-1">State sync quick start scripts <a class="header-anchor" href="#state-sync-quick-start-scripts" aria-label="Permalink to &quot;State sync quick start scripts&quot;">​</a></h4><p>If you are looking to quickly sync a consensus node, and do not need historical blocks, you can use the following scripts and state sync.</p><p><strong>Before running the scripts, make sure to checkout to the <a href="/how-to-guides/participate">correct version</a>:</strong></p>`,30)),d(p),s[165]||(s[165]=o(`<p>The public networks will use state sync so they&#39;ll get to the tip very quickly, but won&#39;t work for your use case if you need historical blocks.</p><h4 id="manual-state-sync-setup" tabindex="-1">Manual state sync setup <a class="header-anchor" href="#manual-state-sync-setup" aria-label="Permalink to &quot;Manual state sync setup&quot;">​</a></h4><p>In <code>$HOME/.celestia-app/config/config.toml</code>, set</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">rpc_servers = </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">trust_height = </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">trust_hash = </span><span style="color:#9ECBFF;">&quot;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rpc_servers = </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">trust_height = </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">trust_hash = </span><span style="color:#032F62;">&quot;&quot;</span></span></code></pre></div><p>And also set statesync to <code>true</code>:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#6A737D;">###         State Sync Configuration Options        ###</span></span>
<span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">statesync</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">enable = </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#6A737D;">###         State Sync Configuration Options        ###</span></span>
<span class="line"><span style="color:#6A737D;">#######################################################</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">statesync</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">enable = </span><span style="color:#005CC5;">true</span></span></code></pre></div><p>To their respective fields. At least two different rpc endpoints should be provided. The more, the greater the chance of detecting any fraudulent behavior.</p><p>Once setup, you should be ready to start the node as normal. In the logs, you should see: <code>Discovering snapshots</code>. This may take a few minutes before snapshots are found depending on the network topology.</p><h3 id="option-3-quick-sync" tabindex="-1">Option 3: Quick sync <a class="header-anchor" href="#option-3-quick-sync" aria-label="Permalink to &quot;Option 3: Quick sync&quot;">​</a></h3><p>Quick sync effectively downloads the entire <code>data</code> directory from a third-party provider meaning the node has all the application and blockchain state as the node it was copied from.</p><p>Run the following command to quick-sync from a snapshot:</p>`,11)),a("div",Ks,[s[160]||(s[160]=o('<div class="tabs"><input type="radio" name="group-eN0sc" id="tab-hAHer1Q" checked="checked"><label for="tab-hAHer1Q">Mainnet Beta</label><input type="radio" name="group-eN0sc" id="tab-IUmZAV4"><label for="tab-IUmZAV4">Mocha</label><input type="radio" name="group-eN0sc" id="tab-KW8RbZf"><label for="tab-KW8RbZf">Arabica</label></div>',1)),a("div",zs,[a("div",Ws,[s[126]||(s[126]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[127]||(s[127]=a("span",{class:"lang"},"bash",-1)),a("pre",Vs,[a("code",null,[s[117]||(s[117]=o(`<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\</span></span>
`,8)),a("span",Ys,[s[112]||(s[112]=a("span",{style:{color:"#9ECBFF"}},"    ",-1)),s[113]||(s[113]=a("span",{style:{color:"#B392F0"}},"egrep",-1)),s[114]||(s[114]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[115]||(s[115]=a("span",{style:{color:"#79B8FF"}},"-o",-1)),a("span",Zs,' ">'+e(l(n).mainnetChainId)+'.*tar" ',1),s[116]||(s[116]=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#9ECBFF;"> &quot;&gt;&quot;)</span>',6))]),s[118]||(s[118]=o(`
<span class="line"><span style="color:#B392F0;">aria2c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://snaps.qubelabs.io/celestia/\${</span><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>`,4))])]),a("pre",Xs,[a("code",null,[s[124]||(s[124]=o(`<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#24292E;">SNAP_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\</span></span>
`,8)),a("span",Gs,[s[119]||(s[119]=a("span",{style:{color:"#032F62"}},"    ",-1)),s[120]||(s[120]=a("span",{style:{color:"#6F42C1"}},"egrep",-1)),s[121]||(s[121]=a("span",{style:{color:"#032F62"}}," ",-1)),s[122]||(s[122]=a("span",{style:{color:"#005CC5"}},"-o",-1)),a("span",Js,' ">'+e(l(n).mainnetChainId)+'.*tar" ',1),s[123]||(s[123]=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-d</span><span style="color:#032F62;"> &quot;&gt;&quot;)</span>',6))]),s[125]||(s[125]=o(`
<span class="line"><span style="color:#6F42C1;">aria2c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://snaps.qubelabs.io/celestia/\${</span><span style="color:#24292E;">SNAP_NAME</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>`,4))])])]),a("div",_s,[s[142]||(s[142]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[143]||(s[143]=a("span",{class:"lang"},"bash",-1)),a("pre",sa,[a("code",null,[s[133]||(s[133]=o(`<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\</span></span>
`,8)),a("span",aa,[s[128]||(s[128]=a("span",{style:{color:"#9ECBFF"}},"    ",-1)),s[129]||(s[129]=a("span",{style:{color:"#B392F0"}},"egrep",-1)),s[130]||(s[130]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[131]||(s[131]=a("span",{style:{color:"#79B8FF"}},"-o",-1)),a("span",oa,' ">'+e(l(n).mochaChainId)+'.*tar" ',1),s[132]||(s[132]=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#9ECBFF;"> &quot;&gt;&quot;)</span>',6))]),s[134]||(s[134]=o(`
<span class="line"><span style="color:#B392F0;">aria2c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://snaps.qubelabs.io/celestia/\${</span><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>`,4))])]),a("pre",na,[a("code",null,[s[140]||(s[140]=o(`<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#24292E;">SNAP_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\</span></span>
`,8)),a("span",ea,[s[135]||(s[135]=a("span",{style:{color:"#032F62"}},"    ",-1)),s[136]||(s[136]=a("span",{style:{color:"#6F42C1"}},"egrep",-1)),s[137]||(s[137]=a("span",{style:{color:"#032F62"}}," ",-1)),s[138]||(s[138]=a("span",{style:{color:"#005CC5"}},"-o",-1)),a("span",la,' ">'+e(l(n).mochaChainId)+'.*tar" ',1),s[139]||(s[139]=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-d</span><span style="color:#032F62;"> &quot;&gt;&quot;)</span>',6))]),s[141]||(s[141]=o(`
<span class="line"><span style="color:#6F42C1;">aria2c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://snaps.qubelabs.io/celestia/\${</span><span style="color:#24292E;">SNAP_NAME</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>`,4))])])]),a("div",ta,[s[158]||(s[158]=a("button",{title:"Copy Code",class:"copy"},null,-1)),s[159]||(s[159]=a("span",{class:"lang"},"bash",-1)),a("pre",pa,[a("code",null,[s[149]||(s[149]=o(`<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#9ECBFF;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\</span></span>
`,8)),a("span",ra,[s[144]||(s[144]=a("span",{style:{color:"#9ECBFF"}},"    ",-1)),s[145]||(s[145]=a("span",{style:{color:"#B392F0"}},"egrep",-1)),s[146]||(s[146]=a("span",{style:{color:"#9ECBFF"}}," ",-1)),s[147]||(s[147]=a("span",{style:{color:"#79B8FF"}},"-o",-1)),a("span",ia,' ">'+e(l(n).arabicaChainId)+'.*tar" ',1),s[148]||(s[148]=o('<span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">tr</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#9ECBFF;"> &quot;&gt;&quot;)</span>',6))]),s[150]||(s[150]=o(`
<span class="line"><span style="color:#B392F0;">aria2c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://snaps.qubelabs.io/celestia/\${</span><span style="color:#E1E4E8;">SNAP_NAME</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-snap.tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>`,4))])]),a("pre",ca,[a("code",null,[s[156]||(s[156]=o(`<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#24292E;">SNAP_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-s</span><span style="color:#032F62;"> https://snaps.qubelabs.io/celestia/ </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\</span></span>
`,8)),a("span",da,[s[151]||(s[151]=a("span",{style:{color:"#032F62"}},"    ",-1)),s[152]||(s[152]=a("span",{style:{color:"#6F42C1"}},"egrep",-1)),s[153]||(s[153]=a("span",{style:{color:"#032F62"}}," ",-1)),s[154]||(s[154]=a("span",{style:{color:"#005CC5"}},"-o",-1)),a("span",ya,' ">'+e(l(n).arabicaChainId)+'.*tar" ',1),s[155]||(s[155]=o('<span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">tr</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-d</span><span style="color:#032F62;"> &quot;&gt;&quot;)</span>',6))]),s[157]||(s[157]=o(`
<span class="line"><span style="color:#6F42C1;">aria2c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://snaps.qubelabs.io/celestia/\${</span><span style="color:#24292E;">SNAP_NAME</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-snap.tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>`,4))])])])])]),s[166]||(s[166]=o(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <a href="/how-to-guides/snapshots">Node snapshots guide</a> provides everything you need to quick sync your node:</p><ul><li>Details about pruned and archive snapshots</li><li>A list of snapshot providers for different node types</li><li>Installation and usage instructions for <code>celestia-snapshot-finder</code> - a tool that automatically finds and downloads the fastest snapshot for your server location</li></ul></div><h2 id="start-the-consensus-node" tabindex="-1">Start the consensus node <a class="header-anchor" href="#start-the-consensus-node" aria-label="Permalink to &quot;Start the consensus node&quot;">​</a></h2><p>If you are running celestia-app &gt;= v4.0.0, the <code>rpc.grpc_laddr</code> config option is required. This option can be set via the CLI flag <code>--rpc.grpc_laddr tcp://0.0.0.0:9098</code> or in the <code>config.toml</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rpc.grpc_laddr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcp://0.0.0.0:9098</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rpc.grpc_laddr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcp://0.0.0.0:9098</span></span></code></pre></div><p>If you are running celestia-app v2.x.x then you&#39;ll want to start the node with a <code>--v2-upgrade-height</code> that is dependent on the network. The <code>--v2-upgrade-height</code> flag is only needed during the v2 upgrade height so after your node has executed the upgrade (e.g. you see the log <code>upgraded from app version 1 to 2</code>), you don&#39;t need to provide this flag for future <code>celestia-appd start</code> invocations.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-_mweI" id="tab-tFlybII" checked="checked"><label for="tab-tFlybII">Mainnet Beta</label><input type="radio" name="group-_mweI" id="tab-iEDbBG9"><label for="tab-iEDbBG9">Mocha</label><input type="radio" name="group-_mweI" id="tab-lCaSRls"><label for="tab-lCaSRls">Arabica</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--v2-upgrade-height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2371495</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--v2-upgrade-height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2371495</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--v2-upgrade-height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2585031</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--v2-upgrade-height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2585031</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--v2-upgrade-height</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1751707</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--v2-upgrade-height</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1751707</span></span></code></pre></div></div></div><p>Optional: If you would like celestia-app to run as a background process, you can follow the <a href="/how-to-guides/systemd">SystemD tutorial</a>.</p><h2 id="extra-resources-for-consensus-nodes" tabindex="-1">Extra resources for consensus nodes <a class="header-anchor" href="#extra-resources-for-consensus-nodes" aria-label="Permalink to &quot;Extra resources for consensus nodes&quot;">​</a></h2><h3 id="optional-reset-network" tabindex="-1">Optional: Reset network <a class="header-anchor" href="#optional-reset-network" aria-label="Permalink to &quot;Optional: Reset network&quot;">​</a></h3><p>There are several ways to reset your consensus node, depending on what you need to preserve:</p><h4 id="option-1-reset-blockchain-data-with-reset-state" tabindex="-1">Option 1: Reset blockchain data with <code>reset-state</code> <a class="header-anchor" href="#option-1-reset-blockchain-data-with-reset-state" aria-label="Permalink to &quot;Option 1: Reset blockchain data with \`reset-state\`&quot;">​</a></h4><p>This command removes blockchain data but preserves validator state and address book of the consensus node:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tendermint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reset-state</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tendermint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reset-state</span></span></code></pre></div><p>This preserves your configuration, validator state (<code>priv_validator_state.json</code>), and peer connections (<code>addrbook.json</code>), but removes:</p><ul><li>blockstore.db</li><li>state.db</li><li>evidence.db</li></ul><p>This option is safe for validator nodes and was created specifically for validators who need to reset their node&#39;s blockchain data without risking double signing. Use this when you need to resync your node but want to maintain your validator&#39;s signing state and peer connections.</p><h4 id="option-2-full-reset-with-unsafe-reset-all" tabindex="-1">Option 2: Full reset with <code>unsafe-reset-all</code> <a class="header-anchor" href="#option-2-full-reset-with-unsafe-reset-all" aria-label="Permalink to &quot;Option 2: Full reset with \`unsafe-reset-all\`&quot;">​</a></h4><p>⚠️ <strong>CAUTION FOR VALIDATORS</strong>: This is considered &quot;unsafe&quot; because it resets validator state:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tendermint</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">unsafe-reset-all</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--home</span><span style="color:#E1E4E8;"> $HOME</span><span style="color:#9ECBFF;">/.celestia-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tendermint</span><span style="color:#24292E;"> </span><span style="color:#032F62;">unsafe-reset-all</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--home</span><span style="color:#24292E;"> $HOME</span><span style="color:#032F62;">/.celestia-app</span></span></code></pre></div><p>This command:</p><ul><li>Resets blockchain data</li><li>Resets validator state (<code>priv_validator_state.json</code>) but NOT private keys (which are in <code>priv_validator_key.json</code>)</li><li>Clears address book (<code>addrbook.json</code>)</li><li>Preserves node configuration</li></ul><p>This option should ONLY be used when you&#39;re absolutely certain your validator isn&#39;t actively participating in consensus. Using this while your validator is active could lead to double signing. Always back up your validator keys before using this command.</p><h4 id="option-3-manual-reset-recommended-for-validator-nodes" tabindex="-1">Option 3: Manual reset (recommended for validator nodes) <a class="header-anchor" href="#option-3-manual-reset-recommended-for-validator-nodes" aria-label="Permalink to &quot;Option 3: Manual reset (recommended for validator nodes)&quot;">​</a></h4><p>For more granular control over what gets reset:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/old-data</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-pv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#B392F0;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/old-data/priv_validator_state.json</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/priv_validator_state.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/old-data</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-pv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#6F42C1;">cp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/old-data/priv_validator_state.json</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/priv_validator_state.json</span></span></code></pre></div><p>This approach lets you manually preserve the validator state file while replacing all other data. The advantage over Option 1 is that you can selectively copy additional files if needed. Use this when you want maximum control over which files are preserved during reset.</p><h4 id="option-4-simple-data-directory-cleanup" tabindex="-1">Option 4: Simple data directory cleanup <a class="header-anchor" href="#option-4-simple-data-directory-cleanup" aria-label="Permalink to &quot;Option 4: Simple data directory cleanup&quot;">​</a></h4><p>For non-validator nodes, you can completely erase all blockchain data and test keys by removing and recreating the data directory:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Remove data directory</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/keyring-test</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Create data directory and initialize validator state file</span></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;{}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/data/priv_validator_state.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Remove data directory</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/keyring-test</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Create data directory and initialize validator state file</span></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;{}&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/data/priv_validator_state.json</span></span></code></pre></div><p>This approach:</p><ul><li>Completely removes all blockchain data (blocks, state, evidence, etc.)</li><li>Removes the keyring-test directory containing transaction signing keys (but not validator consensus keys)</li><li>Creates a new, empty data directory structure</li><li>Initializes a blank validator state file, which erases the record of blocks your validator has signed</li></ul><p><strong>Important:</strong> This option should NOT be used for validator nodes because it creates a double-signing risk. The validator&#39;s consensus private key (in <code>priv_validator_key.json</code> in the config directory) remains intact, but the node loses all record of which blocks it has already signed. If the node is still an active validator on the network, it could sign conflicting blocks at the same height, resulting in slashing penalties.</p><p>Use this option only for non-validator nodes when you want a complete fresh start with no preserved state or connections.</p><p>It&#39;s recommended to test these commands on a testnet first before applying them to a mainnet node.</p><h3 id="optional-configure-an-rpc-endpoint" tabindex="-1">Optional: Configure an RPC endpoint <a class="header-anchor" href="#optional-configure-an-rpc-endpoint" aria-label="Permalink to &quot;Optional: Configure an RPC endpoint&quot;">​</a></h3><p>You can configure your consensus node to be a public RPC endpoint. This allows it to accept connections from data availability nodes and serve requests for the data availability API.</p><div class="tip custom-block"><p class="custom-block-title">Bridge Node Connectivity</p><p>If you&#39;re running a <a href="/how-to-guides/bridge-node">bridge node</a> that connects to your consensus node, ensure that gRPC is properly configured in your <code>app.toml</code> file. Bridge nodes require gRPC access (typically on port 9090) to communicate with the consensus layer.</p></div><h4 id="expose-rpc" tabindex="-1">Expose RPC <a class="header-anchor" href="#expose-rpc" aria-label="Permalink to &quot;Expose RPC&quot;">​</a></h4><p>By default, the RPC service listens on <code>localhost</code> which means it can&#39;t be accessed from other machines. To make the RPC service available publicly, you need to bind it to a public IP or <code>0.0.0.0</code> (which means listening on all available network interfaces).</p><p>You can do this by editing the config.toml file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;s#&quot;tcp://127.0.0.1:26657&quot;#&quot;tcp://0.0.0.0:26657&quot;#g&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.celestia-app/config/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;s#&quot;tcp://127.0.0.1:26657&quot;#&quot;tcp://0.0.0.0:26657&quot;#g&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.celestia-app/config/config.toml</span></span></code></pre></div><p>This command replaces the <code>localhost</code> IP address with <code>0.0.0.0</code>, making the RPC service listen on all available network interfaces.</p><h4 id="note-on-external-address" tabindex="-1">Note on <code>external-address</code> <a class="header-anchor" href="#note-on-external-address" aria-label="Permalink to &quot;Note on \`external-address\`&quot;">​</a></h4><p>The <code>external-address</code> field in the configuration is used when your node is behind a NAT and you need to advertise a different address for peers to dial. Populating this field is not necessary for making the RPC endpoint public.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">EXTERNAL-ADDRESS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">wget</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-qO-</span><span style="color:#9ECBFF;"> eth0.me)</span></span>
<span class="line"><span style="color:#B392F0;">sed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i.bak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;s/^external-address = &quot;&quot;/external-address = &quot;</span><span style="color:#E1E4E8;">$EXTERNAL</span><span style="color:#9ECBFF;">-ADDRESS:26656&quot;/&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    $HOME</span><span style="color:#9ECBFF;">/.celestia-app/config/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">EXTERNAL-ADDRESS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">wget</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-qO-</span><span style="color:#032F62;"> eth0.me)</span></span>
<span class="line"><span style="color:#6F42C1;">sed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i.bak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;s/^external-address = &quot;&quot;/external-address = &quot;</span><span style="color:#24292E;">$EXTERNAL</span><span style="color:#032F62;">-ADDRESS:26656&quot;/&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    $HOME</span><span style="color:#032F62;">/.celestia-app/config/config.toml</span></span></code></pre></div><h4 id="restart-the-node" tabindex="-1">Restart the node <a class="header-anchor" href="#restart-the-node" aria-label="Permalink to &quot;Restart the node&quot;">​</a></h4><p>After making these changes, restart <code>celestia-appd</code> to load the new configurations.</p><h3 id="optional-transaction-indexer-configuration-options" tabindex="-1">Optional: Transaction indexer configuration options <a class="header-anchor" href="#optional-transaction-indexer-configuration-options" aria-label="Permalink to &quot;Optional: Transaction indexer configuration options&quot;">​</a></h3><p>This section guides you on how to configure your <code>config.toml</code> file in <code>celestia-app</code> to select which transactions to index. Depending on the application&#39;s configuration, a node operator may decide which transactions to index.</p><p>The available options are:</p><ol><li><code>null</code> (default): This option disables indexing outside of transaction status. If you don&#39;t need to query transaction data, you can choose this option to save space.</li><li><code>kv</code>: This is the simplest indexer, backed by key-value storage (defaults to levelDB; see DBBackend). When <code>kv</code> is chosen, <code>tx.height</code> and <code>tx.hash</code> will always be indexed. This option is suitable for basic queries on transactions.</li><li><code>psql</code>: This indexer is backed by PostgreSQL. When psql is chosen, <code>tx.height</code> and <code>tx.hash</code> will always be indexed. This option is suitable for complex queries on transactions.</li></ol><p>An example to set the value to <code>kv</code> in <code>config.toml</code> is:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">indexer = </span><span style="color:#9ECBFF;">&quot;kv&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">indexer = </span><span style="color:#032F62;">&quot;kv&quot;</span></span></code></pre></div><p>Remember to restart <code>celestia-appd</code> after making changes to the configuration to load the new settings.</p><h3 id="optional-discard-abci-responses-configuration" tabindex="-1">Optional: Discard ABCI responses configuration <a class="header-anchor" href="#optional-discard-abci-responses-configuration" aria-label="Permalink to &quot;Optional: Discard ABCI responses configuration&quot;">​</a></h3><p>This section will guide you on how to configure your <code>config.toml</code> file in <code>celestia-app</code> to manage the storage of ABCI responses. ABCI responses are the results of executing transactions and are used for <code>/block_results</code> RPC queries and to reindex events in the command-line tool.</p><p>The <code>discard_abci_responses</code> option allows you to control whether these responses are persisted in the state store:</p><ul><li><code>false</code> (default): ABCI responses are stored in the state store. This ensures that ABCI responses are available for <code>/block_results</code> RPC queries and for reindexing events. However, it can consume a significant amount of disk space.</li><li><code>true</code>: ABCI responses are not stored in the state store. This can save a considerable amount of disk space, but <code>/block_results</code> RPC queries and event reindexing will not be available.</li></ul><p>An example to set the value to false in <code>config.toml</code> is:</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">discard_abci_responses = </span><span style="color:#79B8FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">discard_abci_responses = </span><span style="color:#005CC5;">false</span></span></code></pre></div><p>Remember to restart <code>celestia-appd</code> after making changes to the configuration to load the new settings.</p><h3 id="optional-reduce-log-level" tabindex="-1">Optional: Reduce log level <a class="header-anchor" href="#optional-reduce-log-level" aria-label="Permalink to &quot;Optional: Reduce log level&quot;">​</a></h3><p>To reduce the log level, you can modify the <code>log_level</code> field in your <code>config.toml</code> file.</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Output level for logging, including package level options</span></span>
<span class="line"><span style="color:#FDAEB7;">-log_level = &quot;info&quot;</span></span>
<span class="line"><span style="color:#85E89D;">+log_level = &quot;*:error,p2p:info,state:info&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Output level for logging, including package level options</span></span>
<span class="line"><span style="color:#B31D28;">-log_level = &quot;info&quot;</span></span>
<span class="line"><span style="color:#22863A;">+log_level = &quot;*:error,p2p:info,state:info&quot;</span></span></code></pre></div><h3 id="passthrough-command-for-historical-queries" tabindex="-1">Passthrough command for historical queries <a class="header-anchor" href="#passthrough-command-for-historical-queries" aria-label="Permalink to &quot;Passthrough command for historical queries&quot;">​</a></h3><p>Starting with celestia-app v4 the <code>passthrough</code> command allows you to invoke queries on historical app versions. This is particularly useful when you need to query data from before a major version upgrade occurred.</p><h4 id="when-to-use-the-passthrough-command" tabindex="-1">When to use the passthrough command <a class="header-anchor" href="#when-to-use-the-passthrough-command" aria-label="Permalink to &quot;When to use the passthrough command&quot;">​</a></h4><p>The passthrough command is useful in scenarios where:</p><ul><li>You need to query state or transactions that existed before a major app version upgrade</li><li>You&#39;re running a post-upgrade node but need to access data using the query format from a previous version</li><li>You&#39;re debugging issues related to version compatibility after an upgrade</li></ul><h4 id="basic-usage" tabindex="-1">Basic usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic usage&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passthrough</span><span style="color:#E1E4E8;"> [app-version] [command] [flags]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passthrough</span><span style="color:#24292E;"> [app-version] [command] [flags]</span></span></code></pre></div><p>Where:</p><ul><li><code>[app-version]</code> is the historical app version you want to query against (e.g., <code>v1</code>, <code>v2</code>, <code>v3</code>)</li><li><code>[command]</code> is the command you want to execute using that app version&#39;s format</li></ul><h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><p>Query account balance using app version 1 format:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passthrough</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bank</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">balances</span><span style="color:#E1E4E8;"> [address]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passthrough</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bank</span><span style="color:#24292E;"> </span><span style="color:#032F62;">balances</span><span style="color:#24292E;"> [address]</span></span></code></pre></div><p>Query validator information using app version 2 format:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passthrough</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">staking</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">validator</span><span style="color:#E1E4E8;"> [validator-address]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passthrough</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query</span><span style="color:#24292E;"> </span><span style="color:#032F62;">staking</span><span style="color:#24292E;"> </span><span style="color:#032F62;">validator</span><span style="color:#24292E;"> [validator-address]</span></span></code></pre></div><p>Query transaction using app version 3 format:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passthrough</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tx</span><span style="color:#E1E4E8;"> [transaction-hash]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passthrough</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">query</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tx</span><span style="color:#24292E;"> [transaction-hash]</span></span></code></pre></div><h4 id="important-considerations" tabindex="-1">Important considerations <a class="header-anchor" href="#important-considerations" aria-label="Permalink to &quot;Important considerations&quot;">​</a></h4><ul><li>The passthrough command requires that your node has the historical data for the version you&#39;re querying</li><li>Not all query types may be available for all historical versions</li><li>This command is most useful immediately after major version upgrades when you need backward compatibility</li><li>Ensure your node is fully synced before using passthrough queries for accurate results</li></ul><h4 id="getting-help" tabindex="-1">Getting help <a class="header-anchor" href="#getting-help" aria-label="Permalink to &quot;Getting help&quot;">​</a></h4><p>To see all available options for the passthrough command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passthrough</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passthrough</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span></span></code></pre></div><p>To see available commands for a specific app version:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passthrough</span><span style="color:#E1E4E8;"> [app-version] --help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passthrough</span><span style="color:#24292E;"> [app-version] --help</span></span></code></pre></div>`,87))])}}});export{ba as __pageData,Ca as default};
